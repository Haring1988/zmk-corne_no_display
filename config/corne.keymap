/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { flavor = "tap-preferred"; };

&mt { flavor = "tap-preferred"; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <13 14>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <25 26>;
        };

        bac {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <22 21>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <34 33>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <3 4>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <15 16>;
        };

        pu {
            bindings = <&kp PG_UP>;
            key-positions = <7 8>;
        };

        pd {
            bindings = <&kp PG_DN>;
            key-positions = <19 20>;
        };
    };

    behaviors {
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };
    };

    macros {
        Key: Key {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp H &kp L &kp DOT &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp RET>;
            label = "KEY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q    &kp W  &kp E           &kp R                 &kp T             &kp Y      &kp U             &kp I      &kp O    &kp P             &none
&none  &kp A    &kp S  &kp D           &kp F                 &lt 5 G           &lt 5 H    &kp J             &kp K      &kp L    &kp ENTER         &none
&none  &lt 3 Z  &kp X  &kp C           &kp V                 &kp B             &kp N      &kp M             &kp COMMA  &kp DOT  &mt LSHIFT SLASH  &none
                       &lt 6 CAPSLOCK  &mt LCTRL LEFT_SHIFT  &lt 1 LEFT_GUI    &kp SPACE  &ltq 2 BACKSPACE  &lt 4 DEL
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp N1     &kp N2      &kp N3     &kp N4             &kp N5             &kp N6     &kp N7        &kp N8    &kp N9          &kp N0     &trans
&trans  &kp MINUS  &kp EQUAL   &kp F2     &kp F5             &kp TAB            &kp BSLH   &kp LBKT      &kp RBKT  &kp SEMI        &kp APOS   &trans
&trans  &kp GRAVE  &kp C_MUTE  &Key       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &trans     &kp UP_ARROW  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &none
                               &kp LSHFT  &kp LALT           &trans             &kp SPACE  &kp BSPC      &kp DEL
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp LS(N1)     &kp LS(N2)     &kp LS(N3)  &kp LS(N4)  &kp LS(N5)    &kp LS(N6)    &kp LS(N7)    &kp LS(N8)     &kp LS(N9)    &kp LS(N0)    &trans
&trans  &kp LS(MINUS)  &kp LS(EQUAL)  &trans      &trans      &trans        &kp LS(BSLH)  &kp LS(LBKT)  &kp LS(RBKT)   &kp LS(SEMI)  &kp LS(APOS)  &trans
&trans  &kp LS(GRAVE)  &trans         &trans      &trans      &trans        &trans        &trans        &kp LS(COMMA)  &kp LS(DOT)   &kp LS(FSLH)  &none
                                      &trans      &kp BSPC    &kp SPACE     &kp SPACE     &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp LEFT  &kp RIGHT  &kp N7  &kp N8   &kp N9     &kp LS(EQUAL)  &kp MINUS   &kp LS(N8)  &kp FSLH  &kp BSPC   &trans
&trans  &kp LALT  &kp BSPC   &kp N4  &kp N5   &kp N6     &kp EQUAL      &kp LS(N9)  &kp LS(N0)  &trans    &kp ENTER  &trans
&trans  &trans    &kp ENTER  &kp N1  &kp N2   &kp N3     &trans         &trans      &trans      &kp LALT  &kp TAB    &trans
                             &kp N0  &kp DOT  &kp TAB    &trans         &trans      &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR     &bt BT_CLR_ALL  &bt BT_NXT     &bt BT_PRV    &out OUT_TOG    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &out OUT_USB  &out OUT_BLE    &trans  &trans  &trans  &trans  &trans  &trans
                                       &bootloader    &trans        &trans          &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &bootloader  &trans    &kp UP_ARROW  &trans     &kp TAB     &trans     &trans    &kp UP_ARROW  &trans     &bootloader  &trans
&trans  &trans       &kp LEFT  &kp DOWN      &kp RIGHT  &trans      &trans     &kp LEFT  &kp DOWN      &kp RIGHT  &trans       &trans
&trans  &trans       &trans    &trans        &trans     &trans      &trans     &trans    &trans        &trans     &trans       &trans
                               &trans        &kp LALT   &kp LGUI    &kp SPACE  &kp BSPC  &kp DELETE
            >;
        };

        layer_6 {
            bindings = <
&trans  &kp LC(J)            &kp LA(LC(W))  &kp LC(LSHFT)  &kp LC(Y)  &kp LG(TAB)    &trans     &trans    &trans      &trans  &kp BSPC   &trans
&trans  &mt LA(LC(A)) LC(A)  &kp LC(S)      &kp LG(D)      &kp LC(F)  &kp LG(L)      &trans     &kp J     &trans      &trans  &kp ENTER  &trans
&trans  &kp LC(Z)            &kp LC(X)      &kp LC(C)      &kp LC(V)  &kp LC(B)      &trans     &trans    &trans      &trans  &trans     &trans
                                            &none          &kp TAB    &kp LALT       &kp SPACE  &kp BSPC  &kp DELETE
            >;
        };
    };
};
